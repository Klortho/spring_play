<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc 
                             http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/beans 
                             http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                             http://www.springframework.org/schema/context/spring-context-3.2.xsd">

  <!-- Specify that this is a (Spring) annotation-driven application -->
  <mvc:annotation-driven/>
  
  <!-- Define a location for some static resources -->
  <mvc:resources location="assets" mapping="/assets/**"/>
  
  <!-- Define where the component scanner should start looking for annotations. -->
  <context:component-scan base-package="org.chrismaloney"/>


  <!-- Set up a content negotiating view resolver, that  -->
  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <!-- This specifies the order in which the view resolvers are loaded -->
    <property name="order" value="1" />
    <property name="contentNegotiationManager">
      <bean class="org.springframework.web.accept.ContentNegotiationManager">
        <constructor-arg>
          <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
            <constructor-arg>
              <map>
                <entry key="json" value='application/json'/>
                <entry key='xml' value='application/xml'/>
              </map>
            </constructor-arg>
          </bean>
        </constructor-arg>
      </bean>
    </property>
    <property name="defaultViews">
      <list>
        <bean class='org.springframework.web.servlet.view.json.MappingJacksonJsonView'/>
        <bean class='org.springframework.web.servlet.view.xml.MarshallingView'>
          <constructor-arg>
            <bean class='org.springframework.oxm.xstream.XStreamMarshaller'>
              <property name='autodetectAnnotations' value='true'/>
            </bean>
          </constructor-arg>
        </bean>
      </list>
    </property>
  </bean>








  <!-- 
    Register an interceptor to change the locale value from the default.  This specifies to use
    the query string parameter "language" to define the locale, and it looks for a bean with
    the @id "localeResolver" (below) to change the locale.
  -->
  <mvc:interceptors>
    <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"
          p:paramName="language"/>
  </mvc:interceptors>

  <!-- 
    This specifies how we define our locale, and gives it the default value "en".
    The @id must be be "localeResolver". 
  -->
  <bean id="localeResolver"
        class="org.springframework.web.servlet.i18n.SessionLocaleResolver"
        p:defaultLocale="en"/>

  <!-- 
    This specifies where to get message text from.  The @id must be "messageSource". 
  -->
  <bean id="messageSource" 
        class="org.springframework.context.support.ResourceBundleMessageSource"
        p:basename="messages"/>







 <!-- This bean lets the app find the JSP pages.  This is the long, hard way.
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="prefix" value="/WEB-INF/jsp/"/>
      <property name="suffix" value='.jsp'/>
    </bean>
  -->
  
  <!-- This is the nominally easier way.  Requires the p: namespace. -->
  <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
        p:prefix="/WEB-INF/jsp/" 
        p:suffix=".jsp" />


</beans>
